<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Slevin\&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/0b8a95ac68dfba476c68a03180f7f235</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.slevinhsu.com/"/>
  <updated>2018-04-28T07:57:07.874Z</updated>
  <id>http://blog.slevinhsu.com/</id>
  
  <author>
    <name>Slevin Hsu</name>
    <email>hfxu@rinslet.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NGINX 代理TOMCAT请求与静态缓存</title>
    <link href="http://blog.slevinhsu.com/2018/04/25/NGINX%20%E4%BB%A3%E7%90%86TOMCAT%E8%AF%B7%E6%B1%82%E4%B8%8E%E9%9D%99%E6%80%81%E7%BC%93%E5%AD%98/"/>
    <id>http://blog.slevinhsu.com/2018/04/25/NGINX 代理TOMCAT请求与静态缓存/</id>
    <published>2018-04-25T10:33:18.000Z</published>
    <updated>2018-04-28T07:57:07.874Z</updated>
    
    <content type="html"><![CDATA[<p>通常情况下，我们会使用一个静态Web容器代理Tomcat或Jetty容器中的网络请求，实现将动态请求部分交由Tomcat处理，静态文件由Nginx来做缓存管理。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h4 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CentOS 6.5</span><br></pre></td></tr></table></figure><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问 http://tomcat.apache.org/ 下载与jre相适应的Tomcat</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h4 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h4><p>通过yum安装的Nginx配置一般位于<code>/etc/nginx/</code>目录，而server的配置文件主要在<code>/etc/nginx/conf.d/</code>目录。打开默认的<code>default.conf</code>文件或新建一个，建立如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># HTTPS server configuration</span><br><span class="line">#</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name &quot;~^(?&lt;sub&gt;.+)\.example\.com$&quot;; # 代理*.example.com域名的请求</span><br><span class="line">    root         /usr/share/nginx/html/$sub; # 并根据二级域名请求对于目录的资源</span><br><span class="line"></span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(css|js|gif|jpe?g|png|xlsx?|docx?|apk|ipa|ico|mp3|ogg|eot|woff2?|svg|ttf|pdf|html?)$ &#123;</span><br><span class="line">        expires 7d;</span><br><span class="line">    &#125;# 代理这些后缀的静态文件，过期日期为7天，缓存时间设置长一点可极大的提升再次打开页面的速度，但也会对实时更新造成影响。</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">try_files $uri $uri/ =404;</span><br><span class="line">    &#125; # 默认由Nginx代理所有请求</span><br><span class="line">    </span><br><span class="line">    location ~ ^/(sysa|sysb)/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-Server $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_connect_timeout      240;</span><br><span class="line">        proxy_send_timeout         240;</span><br><span class="line">        proxy_read_timeout         240;</span><br><span class="line">    &#125; # sysa这些相当于war包的名字</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文件目录说明"><a href="#文件目录说明" class="headerlink" title="文件目录说明"></a>文件目录说明</h4><p>Tomcat存放War包的目录：</p><p><code>/usr/share/tomcat/webapps/sysa.war</code></p><p><code>/usr/share/tomcat/webapps/sysb.war</code></p><p>Nginx静态文件目录如下所示：</p><p><code>/usr/share/nginx/html/www/sysa</code></p><p><code>/usr/share/nginx/html/www/sysb</code></p><p>在Nginx静态目录中<code>www</code>指的是二级域名，所以也可以改成其他目录，<code>sysa</code>、<code>sysb</code>这2个目录中主要存储这2个Web工程的静态文件。</p><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>配置完成后，通过<code>service nginx restart</code>启动Nginx，通过<code>tomcat/bin/startup.bat</code>启动Tomcat。</p><p>然后浏览器输入如下地址访问，请自行替换成自己的二级域名：</p><p><code>http://wwww.example.com/sysa/</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通常情况下，我们会使用一个静态Web容器代理Tomcat或Jetty容器中的网络请求，实现将动态请求部分交由Tomcat处理，静态文件由Nginx来做缓存管理。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="NGINX" scheme="http://blog.slevinhsu.com/tags/NGINX/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.slevinhsu.com/2018/04/25/hello-world/"/>
    <id>http://blog.slevinhsu.com/2018/04/25/hello-world/</id>
    <published>2018-04-25T10:12:54.145Z</published>
    <updated>2018-03-12T07:19:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
